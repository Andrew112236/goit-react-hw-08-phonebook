{"version":3,"file":"static/js/695.7678d4fb.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/contactsSelectors.js","components/ContactForm/ContactForm.js","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.js","pages/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"title\":\"ContactForm_title__jZguf\",\"label\":\"ContactForm_label__-cVXI\",\"button\":\"ContactForm_button__eSwX9\"};","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.filter.filter;\n\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [getFilter, getContacts],\n  (filter, contacts) => {\n    const normalizeFilter = filter.toLowerCase();\n    return contacts\n      .filter(contact => contact.name.toLowerCase().includes(normalizeFilter))\n      .sort((a, b) => a.name.localeCompare(b.name));\n  }\n);\n","import { useState } from 'react';\nimport styles from '../../components/ContactForm/ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/contactsOperation';\nimport { getContacts } from '../../redux/contacts/contactsSelectors';\n\nexport function ContactForm() {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  console.log(contacts);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (Array.isArray(contacts)) {\n      const contactExists = contacts.some(contact => contact?.name === name);\n      console.log(contactExists);\n      if (contactExists) {\n        window.alert(`${name} is already in your contacts`);\n        return;\n      }\n    }\n\n    dispatch(addContact({ name, number }));\n\n    setName('');\n    setNumber('');\n  };\n\n  const handleChange = e => {\n    const { value, name } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <h1 className={styles.title}>Phonebook</h1>\n      <label className={styles.label}>\n        Name:\n        <input\n          className={styles.name}\n          type=\"text\"\n          name=\"name\"\n          required\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n      <label className={styles.label}>\n        Number:\n        <input\n          type=\"tel\"\n          name=\"number\"\n          required\n          value={number}\n          onChange={handleChange}\n        />\n      </label>\n      <button className={styles.button} type=\"submit\">\n        Add Contact\n      </button>\n    </form>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\"};","import React from 'react';\nimport styles from './Filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateFilter } from '../../redux/filter/filterSlice';\nimport { getFilter } from '../../redux/contacts/contactsSelectors';\n\nexport function Filter() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const onChange = e => {\n    const inputValue = e.target.value;\n    if (typeof inputValue === 'string') {\n      dispatch(updateFilter(inputValue));\n    } else {\n      console.error('Input value is not a string:', inputValue);\n    }\n  };\n\n  return (\n    <div>\n      <label className={styles.label}>\n        Filter contacts by name:\n        <input type=\"text\" name=\"filter\" value={filter} onChange={onChange} />\n      </label>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"ContactList_label__qEmVm\",\"button\":\"ContactList_button__7kL4l\"};","import React from 'react';\nimport styles from './ContactList.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/contactsOperation';\nimport { Notify } from 'notiflix';\nimport { getContacts } from '../../redux/contacts/contactsSelectors';\n\nexport function ContactList() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(state => state.filter.filter);\n\n  console.log(contacts);\n\n  const filteredContacts = contacts?.filter(contact => {\n    if (typeof contact.name === 'string') {\n      return contact.name.toLowerCase().trim().includes(filter.toLowerCase());\n    } else {\n      return false;\n    }\n  });\n\n  if (!filteredContacts?.length && filter.toLowerCase()) {\n    Notify.warning(\n      'No contacts matching your request',\n      { delay: 2000 },\n      {\n        position: 'center-center',\n      }\n    );\n  }\n  console.log(filteredContacts);\n\n  const handleDelete = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  return (\n    <ul>\n      {filteredContacts?.map(({ id, name, number }) => (\n        <li key={id} className={styles.label}>\n          <p>\n            {name}: {number}\n          </p>\n          <button\n            className={styles.button}\n            type=\"button\"\n            onClick={() => handleDelete(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","// Import Files from NPM plugins---------------------------------------------------------------------------------\n\nimport React from 'react';\nimport { useEffect } from 'react';\nimport DocumentTitle from 'react-document-title';\n\n// Import Files from components-----------------------------------------------------------------------------------\n\nimport Loader from '../components/Loader/Loader';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\n\n// Import Redux files---------------------------------------------------------------------------------------------\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  getError,\n  getIsLoading,\n  selectVisibleContacts,\n} from 'redux/contacts/contactsSelectors';\nimport { fetchContacts } from 'redux/contacts/contactsOperation';\n\n// Import MUI Files-----------------------------------------------------------------------------------------------\n\nimport { Container, Typography } from '@mui/material';\n\nconst Contacts = () => {\n  const error = useSelector(getError);\n  const visibleContacts = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n  const operation = useSelector(getIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container\n      component=\"main\"\n      maxWidth=\"md\"\n      sx={{\n        marginTop: 3,\n        marginBottom: 3,\n        minHeight: '80vh',\n        textAlign: 'center',\n      }}\n    >\n      <DocumentTitle title=\"Contacts\"></DocumentTitle>\n      <Typography\n        sx={{ mb: 3 }}\n        variant=\"h1\"\n        fontSize=\"44px\"\n        fontWeight=\"700\"\n        color=\"#1976d2\"\n        gutterBottom\n      >\n        Phonebook\n      </Typography>\n\n      <ContactForm />\n\n      <Typography\n        sx={{ mb: 3 }}\n        variant=\"h2\"\n        fontSize=\"34px\"\n        fontWeight=\"500\"\n        color=\"#1976d2\"\n        gutterBottom\n      >\n        Contacts\n      </Typography>\n\n      <Filter />\n\n      {operation === 'fetch' && !error && <Loader />}\n      {visibleContacts.length === 0 ? (\n        <Typography\n          sx={{ my: 2 }}\n          fontSize=\"18px\"\n          color=\"#1976d2\"\n          fontWeight=\"700\"\n          paragraph\n          align=\"center\"\n        >\n          There are no contacts yet\n        </Typography>\n      ) : (\n        <ContactList />\n      )}\n    </Container>\n  );\n};\n\nexport default Contacts;\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","getContacts","state","contacts","items","getFilter","filter","getIsLoading","isLoading","getError","error","selectVisibleContacts","normalizeFilter","toLowerCase","contact","includes","sort","localeCompare","ContactForm","useSelector","dispatch","useDispatch","useState","setName","number","setNumber","console","log","handleChange","e","target","className","styles","onSubmit","preventDefault","contactExists","some","window","alert","addContact","type","required","onChange","Filter","inputValue","updateFilter","ContactList","filteredContacts","trim","Notify","delay","position","id","onClick","contactId","deleteContact","visibleContacts","operation","useEffect","fetchContacts","Container","component","maxWidth","sx","marginTop","marginBottom","minHeight","textAlign","title","Typography","mb","variant","fontSize","fontWeight","color","gutterBottom","Loader","my","paragraph","align"],"sourceRoot":""}